package edu.hcmut.software_testing.project3.nxvhung.part_a.data_driven;// Generated by Selenium IDE

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import edu.hcmut.software_testing.project3.util.ReadExcelFile;
import java.io.InputStream;
import java.time.Duration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;

public class AddStudentInfoDataDriven {

  private static final String MONTH_OPTION = "//option[. = '%s']";
  private static final String DAY_OPTION = "//option[. = '%s']";
  private static final String YEAR_OPTION = "//option[. = '2010']";
  private static final String FULL_NAME = "%s %s";
  private static final String EMPTY_STRING = "";
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;


  @BeforeTest
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    driver.get("https://www.rosariosis.org/demonstration/");
    driver.manage().window().setSize(new Dimension(1536, 816));
    driver.findElement(By.id("USERNAME")).sendKeys("administrator");
    driver.findElement(By.id("PASSWORD")).sendKeys("administrator");
    driver.findElement(By.cssSelector(".button-primary")).click();
    WebElement studentMenu = (new WebDriverWait(driver, Duration.ofSeconds(5)))
        .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".menu-top > .Students")));
    studentMenu.click();


  }

  @After
  public void tearDown() {
    driver.quit();
  }

  /**
   * Normal case
   *
   * @throws InterruptedException
   */

  @Test
  public void tC001001() throws InterruptedException {
    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("NguyenXuan");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("assign_student_id")).sendKeys("12345");
    driver.findElement(By.id("studentsUSERNAME")).sendKeys("hungnxv");
    driver.findElement(By.id("studentsPASSWORD")).sendKeys("P@ssword123@!X");
    driver.findElement(By.id("studentsCUSTOM_200000000")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000000"));
      dropdown.findElement(By.xpath("//option[. = 'Male']")).click();
    }
    driver.findElement(By.id("studentsCUSTOM_200000001")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000001"));
      dropdown.findElement(By.xpath("//option[. = 'White, Non-Hispanic']")).click();
    }
    driver.findElement(By.id("studentsCUSTOM_200000002")).click();
    driver.findElement(By.id("studentsCUSTOM_200000002")).sendKeys("hung");
    driver.findElement(By.id("studentsCUSTOM_200000005")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000005"));
      dropdown.findElement(By.xpath("//option[. = 'English']")).click();
    }
    driver.findElement(By.id("monthSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("monthSelect1"));
      dropdown.findElement(By.xpath(MONTH_OPTION)).click();
    }
    driver.findElement(By.id("daySelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("daySelect1"));
      dropdown.findElement(By.xpath(DAY_OPTION)).click();
    }
    driver.findElement(By.id("yearSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("yearSelect1"));
      dropdown.findElement(By.xpath(YEAR_OPTION)).click();
    }
    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    WebElement cancelCurrentButton = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".bigger")));
    cancelCurrentButton.click();
    WebElement submitButton = null;

    int maxAttempts = 5;
    int attempt = 0;

    while (attempt < maxAttempts) {
      try {
        // Your code to locate and interact with the element
        submitButton = driver.findElement(By.cssSelector(".button-primary"));
        submitButton.click();
        break;  // Break out of the loop if the interaction was successful
      } catch (StaleElementReferenceException e) {
        // Retry if StaleElementReferenceException occurs
        attempt++;
        Thread.sleep(3000);
      }
    }

    WebElement studentTable = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Group by Family")));

    assertTrue(driver.findElements(By.linkText("Hung NguyenXuan Vinh")).size() != 0);

  }

  /**
   * The "RosarioIS ID" already exists run tC001001 to have duplicate data
   */
  @Test
  public void tC001002() {

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("NguyenXuan");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("assign_student_id")).sendKeys("12345");
    driver.findElement(By.id("studentsUSERNAME")).sendKeys("hungnxv1");
    driver.findElement(By.id("studentsPASSWORD")).sendKeys("P@ssword123@!X");
    driver.findElement(By.id("studentsCUSTOM_200000000")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000000"));
      dropdown.findElement(By.xpath("//option[. = 'Male']")).click();
    }
    driver.findElement(By.id("studentsCUSTOM_200000001")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000001"));
      dropdown.findElement(By.xpath("//option[. = 'White, Non-Hispanic']")).click();
    }
    driver.findElement(By.id("studentsCUSTOM_200000002")).click();
    driver.findElement(By.id("studentsCUSTOM_200000002")).sendKeys("hung");
    driver.findElement(By.id("studentsCUSTOM_200000005")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000005"));
      dropdown.findElement(By.xpath("//option[. = 'English']")).click();
    }
    driver.findElement(By.id("monthSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("monthSelect1"));
      dropdown.findElement(By.xpath(MONTH_OPTION)).click();
    }
    driver.findElement(By.id("daySelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("daySelect1"));
      dropdown.findElement(By.xpath(DAY_OPTION)).click();
    }
    driver.findElement(By.id("yearSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("yearSelect1"));
      dropdown.findElement(By.xpath(YEAR_OPTION)).click();
    }
    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    WebElement errorText = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".error")));

    assertEquals(errorText.getText(), " Error: That RosarioSIS ID is already taken. Please select a different one.");


  }

  /**
   * Duplicate username run tC001001 to have duplicate data
   */
  @Test
  public void tC001003() {

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("NguyenXuan");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("assign_student_id")).sendKeys("123456");
    driver.findElement(By.id("studentsUSERNAME")).sendKeys("hungnxv");
    driver.findElement(By.id("studentsPASSWORD")).sendKeys("P@ssword123@!X");
    driver.findElement(By.id("studentsCUSTOM_200000000")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000000"));
      dropdown.findElement(By.xpath("//option[. = 'Male']")).click();
    }
    driver.findElement(By.id("studentsCUSTOM_200000001")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000001"));
      dropdown.findElement(By.xpath("//option[. = 'White, Non-Hispanic']")).click();
    }
    driver.findElement(By.id("studentsCUSTOM_200000002")).click();
    driver.findElement(By.id("studentsCUSTOM_200000002")).sendKeys("hung");
    driver.findElement(By.id("studentsCUSTOM_200000005")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsCUSTOM_200000005"));
      dropdown.findElement(By.xpath("//option[. = 'English']")).click();
    }
    driver.findElement(By.id("monthSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("monthSelect1"));
      dropdown.findElement(By.xpath(MONTH_OPTION)).click();
    }
    driver.findElement(By.id("daySelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("daySelect1"));
      dropdown.findElement(By.xpath(DAY_OPTION)).click();
    }
    driver.findElement(By.id("yearSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("yearSelect1"));
      dropdown.findElement(By.xpath(YEAR_OPTION)).click();
    }
    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    WebElement errorText = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".error")));

    assertEquals(errorText.getText(), " Error: A user with that username already exists. Choose a different username and try again.");


  }

  /**
   * run tC001001 to have duplicate data
   */
  @Test
  public void tC001004() {

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("NguyenXuan");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("assign_student_id")).sendKeys("123456");
    driver.findElement(By.id("studentsUSERNAME")).sendKeys("hungnxv");
    driver.findElement(By.id("studentsPASSWORD")).sendKeys("123456");

    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    WebElement score2 = driver.findElement(By.cssSelector(".score2"));
    assertTrue(score2.isDisplayed());

  }

  /**
   * the password is weak at orange level, but admin still can save the student
   */
  @Test
  public void tC001005() throws InterruptedException {

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("NguyenXuan");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("assign_student_id")).sendKeys("123456");
    driver.findElement(By.id("studentsUSERNAME")).sendKeys("hungnxv");
    driver.findElement(By.id("studentsPASSWORD")).sendKeys("H@ngnxv");
    WebElement score2 = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".score2")));

    assertTrue(score2.isDisplayed());
    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    WebElement cancelCurrentButton = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".bigger")));
    cancelCurrentButton.click();
    WebElement submitButton = null;

    int maxAttempts = 5;
    int attempt = 0;

    while (attempt < maxAttempts) {
      try {
        // Your code to locate and interact with the element
        submitButton = driver.findElement(By.cssSelector(".button-primary"));
        submitButton.click();
        break;  // Break out of the loop if the interaction was successful
      } catch (StaleElementReferenceException e) {
        // Retry if StaleElementReferenceException occurs
        attempt++;
        Thread.sleep(3000);
      }
    }

    WebElement studentTable = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Group by Family")));

    assertTrue(driver.findElements(By.linkText("Hung NguyenXuan Vinh")).size() != 0);


  }

  /**
   * In vaid birthdate 1
   *
   * @throws InterruptedException
   */
  @Test
  public void tC001006() throws InterruptedException {

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("NguyenVan");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("monthSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("monthSelect1"));
      dropdown.findElement(By.xpath("//option[. = 'February']")).click();
    }
    driver.findElement(By.id("daySelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("daySelect1"));
      dropdown.findElement(By.xpath("//option[. = '31']")).click();
    }
    driver.findElement(By.id("yearSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("yearSelect1"));
      dropdown.findElement(By.xpath(YEAR_OPTION)).click();
    }

    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    WebElement cancelCurrentButton = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".bigger")));
    cancelCurrentButton.click();
    WebElement submitButton = null;

    int maxAttempts = 5;
    int attempt = 0;

    while (attempt < maxAttempts) {
      try {
        // Your code to locate and interact with the element
        submitButton = driver.findElement(By.cssSelector(".button-primary"));
        submitButton.click();
        break;  // Break out of the loop if the interaction was successful
      } catch (StaleElementReferenceException e) {
        // Retry if StaleElementReferenceException occurs
        attempt++;
        Thread.sleep(3000);
      }
    }

    WebElement studentTable = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Group by Family")));
    List<WebElement> link = driver.findElements(By.linkText("Hung NguyenVan Vinh"));

    assertTrue(driver.findElements(By.linkText("Hung NguyenVan Vinh")).size() != 0);
    link.get(0).click();

    WebElement birthDate = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".proper-date")));
    assertEquals("February 28 2010", birthDate.getText());

  }

  /**
   * Future birthdate Choose the date in future, the system should show error message
   */
  @Test
  public void tC001007() {

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys("Hung");

    WebElement studentsMiddleName = driver.findElement(By.id("studentsMIDDLE_NAME"));
    studentsMiddleName.click();
    studentsMiddleName.sendKeys("Van");
    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys("Vinh");
    driver.findElement(By.id("studentsNAME_SUFFIX")).click();
    {
      WebElement dropdown = driver.findElement(By.id("studentsNAME_SUFFIX"));
      dropdown.findElement(By.xpath("//option[. = 'Jr']")).click();
    }
    driver.findElement(By.id("assign_student_id")).click();
    driver.findElement(By.id("monthSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("monthSelect1"));
      dropdown.findElement(By.xpath("//option[. = 'February']")).click();
    }
    driver.findElement(By.id("daySelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("daySelect1"));
      dropdown.findElement(By.xpath("//option[. = '31']")).click();
    }
    driver.findElement(By.id("yearSelect1")).click();
    {
      WebElement dropdown = driver.findElement(By.id("yearSelect1"));
      dropdown.findElement(By.xpath(YEAR_OPTION)).click();
    }

    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    assertTrue(driver.findElements(By.cssSelector(".error")).size() != 0);
  }


  @org.testng.annotations.Test(dataProvider = "testdata")
  public void addStudent(String firstname, String lastname, String id, String username, String password, String day, String month, String year,
      String expectedResult) throws InterruptedException {

    WebElement addAStudentMenu = (new WebDriverWait(driver, Duration.ofSeconds(10)))
        .until(ExpectedConditions.elementToBeClickable(By.linkText("Add a Student")));
    addAStudentMenu.click();

    WebElement studentsFirstName = (new WebDriverWait(driver, Duration.ofSeconds(6)))
        .until(ExpectedConditions.elementToBeClickable(By.id("studentsFIRST_NAME")));
    studentsFirstName.click();
    studentsFirstName.sendKeys(firstname);

    WebElement studentsLastName = driver.findElement(By.id("studentsLAST_NAME"));
    studentsLastName.click();
    studentsLastName.sendKeys(lastname);
    if (!EMPTY_STRING.equalsIgnoreCase(id)) {
      driver.findElement(By.id("assign_student_id")).click();
      driver.findElement(By.id("assign_student_id")).sendKeys(id);
    }

    if (!EMPTY_STRING.equalsIgnoreCase(username)) {
      driver.findElement(By.id("studentsUSERNAME")).sendKeys(username);
      driver.findElement(By.id("studentsPASSWORD")).sendKeys(password);
    }

    if (!EMPTY_STRING.equalsIgnoreCase(month)) {
      driver.findElement(By.id("monthSelect1")).click();
      {
        WebElement dropdown = driver.findElement(By.id("monthSelect1"));
        dropdown.findElement(By.xpath(String.format(MONTH_OPTION, month))).click();
      }
    }

    if (!EMPTY_STRING.equalsIgnoreCase(day)) {
      driver.findElement(By.id("daySelect1")).click();
      {
        WebElement dropdown = driver.findElement(By.id("daySelect1"));
        dropdown.findElement(By.xpath(String.format(DAY_OPTION, day))).click();
      }
    }

    if (!EMPTY_STRING.equalsIgnoreCase(year)) {
      driver.findElement(By.id("yearSelect1")).click();
      {
        WebElement dropdown = driver.findElement(By.id("yearSelect1"));
        dropdown.findElement(By.xpath(String.format(YEAR_OPTION, year))).click();
      }
    }

    driver.findElement(By.cssSelector(".center > .button-primary")).click();
    js.executeScript("window.scrollTo(0,0)");

    if (Boolean.TRUE.toString().equalsIgnoreCase(expectedResult)) {
      WebElement cancelCurrentButton = (new WebDriverWait(driver, Duration.ofSeconds(6)))
          .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".bigger")));
      cancelCurrentButton.click();
      WebElement submitButton = null;

      int maxAttempts = 5;
      int attempt = 0;

      while (attempt < maxAttempts) {
        try {
          // Your code to locate and interact with the element
          submitButton = driver.findElement(By.cssSelector(".button-primary"));
          submitButton.click();
          break;  // Break out of the loop if the interaction was successful
        } catch (StaleElementReferenceException e) {
          // Retry if StaleElementReferenceException occurs
          attempt++;
          Thread.sleep(3000);
        }
      }

      WebElement studentTable = (new WebDriverWait(driver, Duration.ofSeconds(10)))
          .until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Group by Family")));
      assertTrue(driver.findElements(By.linkText(String.format(FULL_NAME, firstname, lastname))).size() != 0);

    } else {
      WebElement errorText = (new WebDriverWait(driver, Duration.ofSeconds(10)))
          .until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".error")));
      List<WebElement> errorElements = driver.findElements(By.cssSelector(".error"));
      boolean errorMessageShow = errorElements.size() != 0 && errorElements.get(0).isDisplayed();

      List<WebElement> passwordErrors = driver.findElements(By.cssSelector(".error"));
      boolean passwordErrorShow = passwordErrors.size() != 0 && passwordErrors.get(0).isDisplayed();
      assertTrue(errorMessageShow || passwordErrorShow);

    }
  }

  @DataProvider(name = "testdata")
  public Object[][] addStudentData() {

    InputStream is = AddStudentInfoDataDriven.class.getResourceAsStream("/addstudent.xlsx");

    ReadExcelFile configuration = new ReadExcelFile(is);
    int rows = configuration.getRowCount(0);
    Object[][] addStudentData = new Object[rows][9];

    for (int i = 0; i < rows; i++) {
      addStudentData[i][0] = configuration.getData(0, i, 0);
      addStudentData[i][1] = configuration.getData(0, i, 1);
      addStudentData[i][2] = configuration.getData(0, i, 2);
      addStudentData[i][3] = configuration.getData(0, i, 3);
      addStudentData[i][4] = configuration.getData(0, i, 4);
      addStudentData[i][5] = configuration.getData(0, i, 5);
      addStudentData[i][6] = configuration.getData(0, i, 6);
      addStudentData[i][7] = configuration.getData(0, i, 7);
      addStudentData[i][8] = configuration.getData(0, i, 8);

    }
    return addStudentData;
  }

  @AfterMethod
  void ProgramTermination() {
//    driver.quit();
  }

  @Test
  public void tC001008() {
    InputStream is = AddStudentInfoDataDriven.class.getResourceAsStream("/addstudent.xlsx");

    ReadExcelFile configuration = new ReadExcelFile(is);
    configuration.getData(0, 0, 0);
  }
}
